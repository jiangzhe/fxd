package fxd

const DivIncrFrac = 4

type DecStatus uint32

const (
	DecStatusOk                  DecStatus = 0x0000_0000 // base status
	DecStatusConversionSyntax    DecStatus = 0x0000_0001
	DecStatusDivisionByZero      DecStatus = 0x0000_0002
	DecStatusDivisionImpossible  DecStatus = 0x0000_0004
	DecStatusDivisionUndefined   DecStatus = 0x0000_0008
	DecStatusInsufficientStorage DecStatus = 0x0000_0010
	DecStatusInexact             DecStatus = 0x0000_0020
	DecStatusInvalidContext      DecStatus = 0x0000_0040
	DecStatusInvalidOperation    DecStatus = 0x0000_0080
	DecStatusOverflow            DecStatus = 0x0000_0200
	DecStatusClamped             DecStatus = 0x0000_0400
	DecStatusRounded             DecStatus = 0x0000_0800
	DecStatusSubnormal           DecStatus = 0x0000_1000
	DecStatusUnderflow           DecStatus = 0x0000_2000
)

type DecErr uint8

const (
	DecErrConversionSyntax DecErr = iota
	DecErrOverflow
	DecErrDivisionByZero
)

func (e DecErr) Error() string {
	switch e {
	case DecErrConversionSyntax:
		return "decimal conversion syntax error"
	case DecErrOverflow:
		return "decimal overflow"
	case DecErrDivisionByZero:
		return "decimal division by 0"
	default:
		return "decimal unknown error"
	}
}

var div9table [128]int = [...]int{
	0, 0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 5, 5,
	6, 6, 6, 6, 6, 6, 6, 6, 6,
	7, 7, 7, 7, 7, 7, 7, 7, 7,
	8, 8, 8, 8, 8, 8, 8, 8, 8,
	9, 9, 9, 9, 9, 9, 9, 9, 9,
	10, 10, 10, 10, 10, 10, 10, 10, 10,
	11, 11, 11, 11, 11, 11, 11, 11, 11,
	12, 12, 12, 12, 12, 12, 12, 12, 12,
	13, 13, 13, 13, 13, 13, 13, 13, 13,
	14, 14,
}

var mod9table [128]int = [...]int{
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1, 2, 3, 4, 5, 6, 7, 8,
	0, 1,
}

func getUnits(d int) int {
	return div9(d + 8)
}

func div9(d int) int {
	if d >= 0 && d < 128 {
		return div9table[d]
	}
	return d / 9
}

func mod9(d int) int {
	if d >= 0 && d < 128 {
		return mod9table[d]
	}
	return d % 9
}

var decStrInfinityUpperFull = []byte("INFINITY")
var decStrInfinityLowerFull = []byte("infinity")
var decStrInfinityUpperAbbr = []byte("INF")
var decStrInfinityLowerAbbr = []byte("inf")
var decStrInfinityOutput = []byte("Infinity")
var decStrNaNOutput = []byte("NaN")

func decBiStr(tgt []byte, str1 []byte, str2 []byte) bool {
	if len(tgt) != len(str1) && len(tgt) != len(str2) {
		return false
	}
	n := len(tgt)
	// enforce bound check
	_ = tgt[n-1]
	_ = str1[n-1]
	_ = str2[n-1]
	for i := 0; i < n; i++ {
		if tgt[i] != str1[i] && tgt[i] != str2[i] {
			return false
		}
	}
	return true
}

var pow10 [10]int = [...]int{
	1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 1000000000,
}

const BinHighUnit = 1_000_000
const BinMidUnit = 1_000

var BIN2CHAR [4001]byte = [...]byte{
	'\x00', '0', '0', '0', '\x01', '0', '0', '1', '\x01', '0', '0', '2', '\x01', '0', '0', '3', '\x01', '0', '0', '4',
	'\x01', '0', '0', '5', '\x01', '0', '0', '6', '\x01', '0', '0', '7', '\x01', '0', '0', '8', '\x01', '0', '0', '9',
	'\x02', '0', '1', '0', '\x02', '0', '1', '1', '\x02', '0', '1', '2', '\x02', '0', '1', '3', '\x02', '0', '1', '4',
	'\x02', '0', '1', '5', '\x02', '0', '1', '6', '\x02', '0', '1', '7', '\x02', '0', '1', '8', '\x02', '0', '1', '9',
	'\x02', '0', '2', '0', '\x02', '0', '2', '1', '\x02', '0', '2', '2', '\x02', '0', '2', '3', '\x02', '0', '2', '4',
	'\x02', '0', '2', '5', '\x02', '0', '2', '6', '\x02', '0', '2', '7', '\x02', '0', '2', '8', '\x02', '0', '2', '9',
	'\x02', '0', '3', '0', '\x02', '0', '3', '1', '\x02', '0', '3', '2', '\x02', '0', '3', '3', '\x02', '0', '3', '4',
	'\x02', '0', '3', '5', '\x02', '0', '3', '6', '\x02', '0', '3', '7', '\x02', '0', '3', '8', '\x02', '0', '3', '9',
	'\x02', '0', '4', '0', '\x02', '0', '4', '1', '\x02', '0', '4', '2', '\x02', '0', '4', '3', '\x02', '0', '4', '4',
	'\x02', '0', '4', '5', '\x02', '0', '4', '6', '\x02', '0', '4', '7', '\x02', '0', '4', '8', '\x02', '0', '4', '9',
	'\x02', '0', '5', '0', '\x02', '0', '5', '1', '\x02', '0', '5', '2', '\x02', '0', '5', '3', '\x02', '0', '5', '4',
	'\x02', '0', '5', '5', '\x02', '0', '5', '6', '\x02', '0', '5', '7', '\x02', '0', '5', '8', '\x02', '0', '5', '9',
	'\x02', '0', '6', '0', '\x02', '0', '6', '1', '\x02', '0', '6', '2', '\x02', '0', '6', '3', '\x02', '0', '6', '4',
	'\x02', '0', '6', '5', '\x02', '0', '6', '6', '\x02', '0', '6', '7', '\x02', '0', '6', '8', '\x02', '0', '6', '9',
	'\x02', '0', '7', '0', '\x02', '0', '7', '1', '\x02', '0', '7', '2', '\x02', '0', '7', '3', '\x02', '0', '7', '4',
	'\x02', '0', '7', '5', '\x02', '0', '7', '6', '\x02', '0', '7', '7', '\x02', '0', '7', '8', '\x02', '0', '7', '9',
	'\x02', '0', '8', '0', '\x02', '0', '8', '1', '\x02', '0', '8', '2', '\x02', '0', '8', '3', '\x02', '0', '8', '4',
	'\x02', '0', '8', '5', '\x02', '0', '8', '6', '\x02', '0', '8', '7', '\x02', '0', '8', '8', '\x02', '0', '8', '9',
	'\x02', '0', '9', '0', '\x02', '0', '9', '1', '\x02', '0', '9', '2', '\x02', '0', '9', '3', '\x02', '0', '9', '4',
	'\x02', '0', '9', '5', '\x02', '0', '9', '6', '\x02', '0', '9', '7', '\x02', '0', '9', '8', '\x02', '0', '9', '9',
	'\x03', '1', '0', '0', '\x03', '1', '0', '1', '\x03', '1', '0', '2', '\x03', '1', '0', '3', '\x03', '1', '0', '4',
	'\x03', '1', '0', '5', '\x03', '1', '0', '6', '\x03', '1', '0', '7', '\x03', '1', '0', '8', '\x03', '1', '0', '9',
	'\x03', '1', '1', '0', '\x03', '1', '1', '1', '\x03', '1', '1', '2', '\x03', '1', '1', '3', '\x03', '1', '1', '4',
	'\x03', '1', '1', '5', '\x03', '1', '1', '6', '\x03', '1', '1', '7', '\x03', '1', '1', '8', '\x03', '1', '1', '9',
	'\x03', '1', '2', '0', '\x03', '1', '2', '1', '\x03', '1', '2', '2', '\x03', '1', '2', '3', '\x03', '1', '2', '4',
	'\x03', '1', '2', '5', '\x03', '1', '2', '6', '\x03', '1', '2', '7', '\x03', '1', '2', '8', '\x03', '1', '2', '9',
	'\x03', '1', '3', '0', '\x03', '1', '3', '1', '\x03', '1', '3', '2', '\x03', '1', '3', '3', '\x03', '1', '3', '4',
	'\x03', '1', '3', '5', '\x03', '1', '3', '6', '\x03', '1', '3', '7', '\x03', '1', '3', '8', '\x03', '1', '3', '9',
	'\x03', '1', '4', '0', '\x03', '1', '4', '1', '\x03', '1', '4', '2', '\x03', '1', '4', '3', '\x03', '1', '4', '4',
	'\x03', '1', '4', '5', '\x03', '1', '4', '6', '\x03', '1', '4', '7', '\x03', '1', '4', '8', '\x03', '1', '4', '9',
	'\x03', '1', '5', '0', '\x03', '1', '5', '1', '\x03', '1', '5', '2', '\x03', '1', '5', '3', '\x03', '1', '5', '4',
	'\x03', '1', '5', '5', '\x03', '1', '5', '6', '\x03', '1', '5', '7', '\x03', '1', '5', '8', '\x03', '1', '5', '9',
	'\x03', '1', '6', '0', '\x03', '1', '6', '1', '\x03', '1', '6', '2', '\x03', '1', '6', '3', '\x03', '1', '6', '4',
	'\x03', '1', '6', '5', '\x03', '1', '6', '6', '\x03', '1', '6', '7', '\x03', '1', '6', '8', '\x03', '1', '6', '9',
	'\x03', '1', '7', '0', '\x03', '1', '7', '1', '\x03', '1', '7', '2', '\x03', '1', '7', '3', '\x03', '1', '7', '4',
	'\x03', '1', '7', '5', '\x03', '1', '7', '6', '\x03', '1', '7', '7', '\x03', '1', '7', '8', '\x03', '1', '7', '9',
	'\x03', '1', '8', '0', '\x03', '1', '8', '1', '\x03', '1', '8', '2', '\x03', '1', '8', '3', '\x03', '1', '8', '4',
	'\x03', '1', '8', '5', '\x03', '1', '8', '6', '\x03', '1', '8', '7', '\x03', '1', '8', '8', '\x03', '1', '8', '9',
	'\x03', '1', '9', '0', '\x03', '1', '9', '1', '\x03', '1', '9', '2', '\x03', '1', '9', '3', '\x03', '1', '9', '4',
	'\x03', '1', '9', '5', '\x03', '1', '9', '6', '\x03', '1', '9', '7', '\x03', '1', '9', '8', '\x03', '1', '9', '9',
	'\x03', '2', '0', '0', '\x03', '2', '0', '1', '\x03', '2', '0', '2', '\x03', '2', '0', '3', '\x03', '2', '0', '4',
	'\x03', '2', '0', '5', '\x03', '2', '0', '6', '\x03', '2', '0', '7', '\x03', '2', '0', '8', '\x03', '2', '0', '9',
	'\x03', '2', '1', '0', '\x03', '2', '1', '1', '\x03', '2', '1', '2', '\x03', '2', '1', '3', '\x03', '2', '1', '4',
	'\x03', '2', '1', '5', '\x03', '2', '1', '6', '\x03', '2', '1', '7', '\x03', '2', '1', '8', '\x03', '2', '1', '9',
	'\x03', '2', '2', '0', '\x03', '2', '2', '1', '\x03', '2', '2', '2', '\x03', '2', '2', '3', '\x03', '2', '2', '4',
	'\x03', '2', '2', '5', '\x03', '2', '2', '6', '\x03', '2', '2', '7', '\x03', '2', '2', '8', '\x03', '2', '2', '9',
	'\x03', '2', '3', '0', '\x03', '2', '3', '1', '\x03', '2', '3', '2', '\x03', '2', '3', '3', '\x03', '2', '3', '4',
	'\x03', '2', '3', '5', '\x03', '2', '3', '6', '\x03', '2', '3', '7', '\x03', '2', '3', '8', '\x03', '2', '3', '9',
	'\x03', '2', '4', '0', '\x03', '2', '4', '1', '\x03', '2', '4', '2', '\x03', '2', '4', '3', '\x03', '2', '4', '4',
	'\x03', '2', '4', '5', '\x03', '2', '4', '6', '\x03', '2', '4', '7', '\x03', '2', '4', '8', '\x03', '2', '4', '9',
	'\x03', '2', '5', '0', '\x03', '2', '5', '1', '\x03', '2', '5', '2', '\x03', '2', '5', '3', '\x03', '2', '5', '4',
	'\x03', '2', '5', '5', '\x03', '2', '5', '6', '\x03', '2', '5', '7', '\x03', '2', '5', '8', '\x03', '2', '5', '9',
	'\x03', '2', '6', '0', '\x03', '2', '6', '1', '\x03', '2', '6', '2', '\x03', '2', '6', '3', '\x03', '2', '6', '4',
	'\x03', '2', '6', '5', '\x03', '2', '6', '6', '\x03', '2', '6', '7', '\x03', '2', '6', '8', '\x03', '2', '6', '9',
	'\x03', '2', '7', '0', '\x03', '2', '7', '1', '\x03', '2', '7', '2', '\x03', '2', '7', '3', '\x03', '2', '7', '4',
	'\x03', '2', '7', '5', '\x03', '2', '7', '6', '\x03', '2', '7', '7', '\x03', '2', '7', '8', '\x03', '2', '7', '9',
	'\x03', '2', '8', '0', '\x03', '2', '8', '1', '\x03', '2', '8', '2', '\x03', '2', '8', '3', '\x03', '2', '8', '4',
	'\x03', '2', '8', '5', '\x03', '2', '8', '6', '\x03', '2', '8', '7', '\x03', '2', '8', '8', '\x03', '2', '8', '9',
	'\x03', '2', '9', '0', '\x03', '2', '9', '1', '\x03', '2', '9', '2', '\x03', '2', '9', '3', '\x03', '2', '9', '4',
	'\x03', '2', '9', '5', '\x03', '2', '9', '6', '\x03', '2', '9', '7', '\x03', '2', '9', '8', '\x03', '2', '9', '9',
	'\x03', '3', '0', '0', '\x03', '3', '0', '1', '\x03', '3', '0', '2', '\x03', '3', '0', '3', '\x03', '3', '0', '4',
	'\x03', '3', '0', '5', '\x03', '3', '0', '6', '\x03', '3', '0', '7', '\x03', '3', '0', '8', '\x03', '3', '0', '9',
	'\x03', '3', '1', '0', '\x03', '3', '1', '1', '\x03', '3', '1', '2', '\x03', '3', '1', '3', '\x03', '3', '1', '4',
	'\x03', '3', '1', '5', '\x03', '3', '1', '6', '\x03', '3', '1', '7', '\x03', '3', '1', '8', '\x03', '3', '1', '9',
	'\x03', '3', '2', '0', '\x03', '3', '2', '1', '\x03', '3', '2', '2', '\x03', '3', '2', '3', '\x03', '3', '2', '4',
	'\x03', '3', '2', '5', '\x03', '3', '2', '6', '\x03', '3', '2', '7', '\x03', '3', '2', '8', '\x03', '3', '2', '9',
	'\x03', '3', '3', '0', '\x03', '3', '3', '1', '\x03', '3', '3', '2', '\x03', '3', '3', '3', '\x03', '3', '3', '4',
	'\x03', '3', '3', '5', '\x03', '3', '3', '6', '\x03', '3', '3', '7', '\x03', '3', '3', '8', '\x03', '3', '3', '9',
	'\x03', '3', '4', '0', '\x03', '3', '4', '1', '\x03', '3', '4', '2', '\x03', '3', '4', '3', '\x03', '3', '4', '4',
	'\x03', '3', '4', '5', '\x03', '3', '4', '6', '\x03', '3', '4', '7', '\x03', '3', '4', '8', '\x03', '3', '4', '9',
	'\x03', '3', '5', '0', '\x03', '3', '5', '1', '\x03', '3', '5', '2', '\x03', '3', '5', '3', '\x03', '3', '5', '4',
	'\x03', '3', '5', '5', '\x03', '3', '5', '6', '\x03', '3', '5', '7', '\x03', '3', '5', '8', '\x03', '3', '5', '9',
	'\x03', '3', '6', '0', '\x03', '3', '6', '1', '\x03', '3', '6', '2', '\x03', '3', '6', '3', '\x03', '3', '6', '4',
	'\x03', '3', '6', '5', '\x03', '3', '6', '6', '\x03', '3', '6', '7', '\x03', '3', '6', '8', '\x03', '3', '6', '9',
	'\x03', '3', '7', '0', '\x03', '3', '7', '1', '\x03', '3', '7', '2', '\x03', '3', '7', '3', '\x03', '3', '7', '4',
	'\x03', '3', '7', '5', '\x03', '3', '7', '6', '\x03', '3', '7', '7', '\x03', '3', '7', '8', '\x03', '3', '7', '9',
	'\x03', '3', '8', '0', '\x03', '3', '8', '1', '\x03', '3', '8', '2', '\x03', '3', '8', '3', '\x03', '3', '8', '4',
	'\x03', '3', '8', '5', '\x03', '3', '8', '6', '\x03', '3', '8', '7', '\x03', '3', '8', '8', '\x03', '3', '8', '9',
	'\x03', '3', '9', '0', '\x03', '3', '9', '1', '\x03', '3', '9', '2', '\x03', '3', '9', '3', '\x03', '3', '9', '4',
	'\x03', '3', '9', '5', '\x03', '3', '9', '6', '\x03', '3', '9', '7', '\x03', '3', '9', '8', '\x03', '3', '9', '9',
	'\x03', '4', '0', '0', '\x03', '4', '0', '1', '\x03', '4', '0', '2', '\x03', '4', '0', '3', '\x03', '4', '0', '4',
	'\x03', '4', '0', '5', '\x03', '4', '0', '6', '\x03', '4', '0', '7', '\x03', '4', '0', '8', '\x03', '4', '0', '9',
	'\x03', '4', '1', '0', '\x03', '4', '1', '1', '\x03', '4', '1', '2', '\x03', '4', '1', '3', '\x03', '4', '1', '4',
	'\x03', '4', '1', '5', '\x03', '4', '1', '6', '\x03', '4', '1', '7', '\x03', '4', '1', '8', '\x03', '4', '1', '9',
	'\x03', '4', '2', '0', '\x03', '4', '2', '1', '\x03', '4', '2', '2', '\x03', '4', '2', '3', '\x03', '4', '2', '4',
	'\x03', '4', '2', '5', '\x03', '4', '2', '6', '\x03', '4', '2', '7', '\x03', '4', '2', '8', '\x03', '4', '2', '9',
	'\x03', '4', '3', '0', '\x03', '4', '3', '1', '\x03', '4', '3', '2', '\x03', '4', '3', '3', '\x03', '4', '3', '4',
	'\x03', '4', '3', '5', '\x03', '4', '3', '6', '\x03', '4', '3', '7', '\x03', '4', '3', '8', '\x03', '4', '3', '9',
	'\x03', '4', '4', '0', '\x03', '4', '4', '1', '\x03', '4', '4', '2', '\x03', '4', '4', '3', '\x03', '4', '4', '4',
	'\x03', '4', '4', '5', '\x03', '4', '4', '6', '\x03', '4', '4', '7', '\x03', '4', '4', '8', '\x03', '4', '4', '9',
	'\x03', '4', '5', '0', '\x03', '4', '5', '1', '\x03', '4', '5', '2', '\x03', '4', '5', '3', '\x03', '4', '5', '4',
	'\x03', '4', '5', '5', '\x03', '4', '5', '6', '\x03', '4', '5', '7', '\x03', '4', '5', '8', '\x03', '4', '5', '9',
	'\x03', '4', '6', '0', '\x03', '4', '6', '1', '\x03', '4', '6', '2', '\x03', '4', '6', '3', '\x03', '4', '6', '4',
	'\x03', '4', '6', '5', '\x03', '4', '6', '6', '\x03', '4', '6', '7', '\x03', '4', '6', '8', '\x03', '4', '6', '9',
	'\x03', '4', '7', '0', '\x03', '4', '7', '1', '\x03', '4', '7', '2', '\x03', '4', '7', '3', '\x03', '4', '7', '4',
	'\x03', '4', '7', '5', '\x03', '4', '7', '6', '\x03', '4', '7', '7', '\x03', '4', '7', '8', '\x03', '4', '7', '9',
	'\x03', '4', '8', '0', '\x03', '4', '8', '1', '\x03', '4', '8', '2', '\x03', '4', '8', '3', '\x03', '4', '8', '4',
	'\x03', '4', '8', '5', '\x03', '4', '8', '6', '\x03', '4', '8', '7', '\x03', '4', '8', '8', '\x03', '4', '8', '9',
	'\x03', '4', '9', '0', '\x03', '4', '9', '1', '\x03', '4', '9', '2', '\x03', '4', '9', '3', '\x03', '4', '9', '4',
	'\x03', '4', '9', '5', '\x03', '4', '9', '6', '\x03', '4', '9', '7', '\x03', '4', '9', '8', '\x03', '4', '9', '9',
	'\x03', '5', '0', '0', '\x03', '5', '0', '1', '\x03', '5', '0', '2', '\x03', '5', '0', '3', '\x03', '5', '0', '4',
	'\x03', '5', '0', '5', '\x03', '5', '0', '6', '\x03', '5', '0', '7', '\x03', '5', '0', '8', '\x03', '5', '0', '9',
	'\x03', '5', '1', '0', '\x03', '5', '1', '1', '\x03', '5', '1', '2', '\x03', '5', '1', '3', '\x03', '5', '1', '4',
	'\x03', '5', '1', '5', '\x03', '5', '1', '6', '\x03', '5', '1', '7', '\x03', '5', '1', '8', '\x03', '5', '1', '9',
	'\x03', '5', '2', '0', '\x03', '5', '2', '1', '\x03', '5', '2', '2', '\x03', '5', '2', '3', '\x03', '5', '2', '4',
	'\x03', '5', '2', '5', '\x03', '5', '2', '6', '\x03', '5', '2', '7', '\x03', '5', '2', '8', '\x03', '5', '2', '9',
	'\x03', '5', '3', '0', '\x03', '5', '3', '1', '\x03', '5', '3', '2', '\x03', '5', '3', '3', '\x03', '5', '3', '4',
	'\x03', '5', '3', '5', '\x03', '5', '3', '6', '\x03', '5', '3', '7', '\x03', '5', '3', '8', '\x03', '5', '3', '9',
	'\x03', '5', '4', '0', '\x03', '5', '4', '1', '\x03', '5', '4', '2', '\x03', '5', '4', '3', '\x03', '5', '4', '4',
	'\x03', '5', '4', '5', '\x03', '5', '4', '6', '\x03', '5', '4', '7', '\x03', '5', '4', '8', '\x03', '5', '4', '9',
	'\x03', '5', '5', '0', '\x03', '5', '5', '1', '\x03', '5', '5', '2', '\x03', '5', '5', '3', '\x03', '5', '5', '4',
	'\x03', '5', '5', '5', '\x03', '5', '5', '6', '\x03', '5', '5', '7', '\x03', '5', '5', '8', '\x03', '5', '5', '9',
	'\x03', '5', '6', '0', '\x03', '5', '6', '1', '\x03', '5', '6', '2', '\x03', '5', '6', '3', '\x03', '5', '6', '4',
	'\x03', '5', '6', '5', '\x03', '5', '6', '6', '\x03', '5', '6', '7', '\x03', '5', '6', '8', '\x03', '5', '6', '9',
	'\x03', '5', '7', '0', '\x03', '5', '7', '1', '\x03', '5', '7', '2', '\x03', '5', '7', '3', '\x03', '5', '7', '4',
	'\x03', '5', '7', '5', '\x03', '5', '7', '6', '\x03', '5', '7', '7', '\x03', '5', '7', '8', '\x03', '5', '7', '9',
	'\x03', '5', '8', '0', '\x03', '5', '8', '1', '\x03', '5', '8', '2', '\x03', '5', '8', '3', '\x03', '5', '8', '4',
	'\x03', '5', '8', '5', '\x03', '5', '8', '6', '\x03', '5', '8', '7', '\x03', '5', '8', '8', '\x03', '5', '8', '9',
	'\x03', '5', '9', '0', '\x03', '5', '9', '1', '\x03', '5', '9', '2', '\x03', '5', '9', '3', '\x03', '5', '9', '4',
	'\x03', '5', '9', '5', '\x03', '5', '9', '6', '\x03', '5', '9', '7', '\x03', '5', '9', '8', '\x03', '5', '9', '9',
	'\x03', '6', '0', '0', '\x03', '6', '0', '1', '\x03', '6', '0', '2', '\x03', '6', '0', '3', '\x03', '6', '0', '4',
	'\x03', '6', '0', '5', '\x03', '6', '0', '6', '\x03', '6', '0', '7', '\x03', '6', '0', '8', '\x03', '6', '0', '9',
	'\x03', '6', '1', '0', '\x03', '6', '1', '1', '\x03', '6', '1', '2', '\x03', '6', '1', '3', '\x03', '6', '1', '4',
	'\x03', '6', '1', '5', '\x03', '6', '1', '6', '\x03', '6', '1', '7', '\x03', '6', '1', '8', '\x03', '6', '1', '9',
	'\x03', '6', '2', '0', '\x03', '6', '2', '1', '\x03', '6', '2', '2', '\x03', '6', '2', '3', '\x03', '6', '2', '4',
	'\x03', '6', '2', '5', '\x03', '6', '2', '6', '\x03', '6', '2', '7', '\x03', '6', '2', '8', '\x03', '6', '2', '9',
	'\x03', '6', '3', '0', '\x03', '6', '3', '1', '\x03', '6', '3', '2', '\x03', '6', '3', '3', '\x03', '6', '3', '4',
	'\x03', '6', '3', '5', '\x03', '6', '3', '6', '\x03', '6', '3', '7', '\x03', '6', '3', '8', '\x03', '6', '3', '9',
	'\x03', '6', '4', '0', '\x03', '6', '4', '1', '\x03', '6', '4', '2', '\x03', '6', '4', '3', '\x03', '6', '4', '4',
	'\x03', '6', '4', '5', '\x03', '6', '4', '6', '\x03', '6', '4', '7', '\x03', '6', '4', '8', '\x03', '6', '4', '9',
	'\x03', '6', '5', '0', '\x03', '6', '5', '1', '\x03', '6', '5', '2', '\x03', '6', '5', '3', '\x03', '6', '5', '4',
	'\x03', '6', '5', '5', '\x03', '6', '5', '6', '\x03', '6', '5', '7', '\x03', '6', '5', '8', '\x03', '6', '5', '9',
	'\x03', '6', '6', '0', '\x03', '6', '6', '1', '\x03', '6', '6', '2', '\x03', '6', '6', '3', '\x03', '6', '6', '4',
	'\x03', '6', '6', '5', '\x03', '6', '6', '6', '\x03', '6', '6', '7', '\x03', '6', '6', '8', '\x03', '6', '6', '9',
	'\x03', '6', '7', '0', '\x03', '6', '7', '1', '\x03', '6', '7', '2', '\x03', '6', '7', '3', '\x03', '6', '7', '4',
	'\x03', '6', '7', '5', '\x03', '6', '7', '6', '\x03', '6', '7', '7', '\x03', '6', '7', '8', '\x03', '6', '7', '9',
	'\x03', '6', '8', '0', '\x03', '6', '8', '1', '\x03', '6', '8', '2', '\x03', '6', '8', '3', '\x03', '6', '8', '4',
	'\x03', '6', '8', '5', '\x03', '6', '8', '6', '\x03', '6', '8', '7', '\x03', '6', '8', '8', '\x03', '6', '8', '9',
	'\x03', '6', '9', '0', '\x03', '6', '9', '1', '\x03', '6', '9', '2', '\x03', '6', '9', '3', '\x03', '6', '9', '4',
	'\x03', '6', '9', '5', '\x03', '6', '9', '6', '\x03', '6', '9', '7', '\x03', '6', '9', '8', '\x03', '6', '9', '9',
	'\x03', '7', '0', '0', '\x03', '7', '0', '1', '\x03', '7', '0', '2', '\x03', '7', '0', '3', '\x03', '7', '0', '4',
	'\x03', '7', '0', '5', '\x03', '7', '0', '6', '\x03', '7', '0', '7', '\x03', '7', '0', '8', '\x03', '7', '0', '9',
	'\x03', '7', '1', '0', '\x03', '7', '1', '1', '\x03', '7', '1', '2', '\x03', '7', '1', '3', '\x03', '7', '1', '4',
	'\x03', '7', '1', '5', '\x03', '7', '1', '6', '\x03', '7', '1', '7', '\x03', '7', '1', '8', '\x03', '7', '1', '9',
	'\x03', '7', '2', '0', '\x03', '7', '2', '1', '\x03', '7', '2', '2', '\x03', '7', '2', '3', '\x03', '7', '2', '4',
	'\x03', '7', '2', '5', '\x03', '7', '2', '6', '\x03', '7', '2', '7', '\x03', '7', '2', '8', '\x03', '7', '2', '9',
	'\x03', '7', '3', '0', '\x03', '7', '3', '1', '\x03', '7', '3', '2', '\x03', '7', '3', '3', '\x03', '7', '3', '4',
	'\x03', '7', '3', '5', '\x03', '7', '3', '6', '\x03', '7', '3', '7', '\x03', '7', '3', '8', '\x03', '7', '3', '9',
	'\x03', '7', '4', '0', '\x03', '7', '4', '1', '\x03', '7', '4', '2', '\x03', '7', '4', '3', '\x03', '7', '4', '4',
	'\x03', '7', '4', '5', '\x03', '7', '4', '6', '\x03', '7', '4', '7', '\x03', '7', '4', '8', '\x03', '7', '4', '9',
	'\x03', '7', '5', '0', '\x03', '7', '5', '1', '\x03', '7', '5', '2', '\x03', '7', '5', '3', '\x03', '7', '5', '4',
	'\x03', '7', '5', '5', '\x03', '7', '5', '6', '\x03', '7', '5', '7', '\x03', '7', '5', '8', '\x03', '7', '5', '9',
	'\x03', '7', '6', '0', '\x03', '7', '6', '1', '\x03', '7', '6', '2', '\x03', '7', '6', '3', '\x03', '7', '6', '4',
	'\x03', '7', '6', '5', '\x03', '7', '6', '6', '\x03', '7', '6', '7', '\x03', '7', '6', '8', '\x03', '7', '6', '9',
	'\x03', '7', '7', '0', '\x03', '7', '7', '1', '\x03', '7', '7', '2', '\x03', '7', '7', '3', '\x03', '7', '7', '4',
	'\x03', '7', '7', '5', '\x03', '7', '7', '6', '\x03', '7', '7', '7', '\x03', '7', '7', '8', '\x03', '7', '7', '9',
	'\x03', '7', '8', '0', '\x03', '7', '8', '1', '\x03', '7', '8', '2', '\x03', '7', '8', '3', '\x03', '7', '8', '4',
	'\x03', '7', '8', '5', '\x03', '7', '8', '6', '\x03', '7', '8', '7', '\x03', '7', '8', '8', '\x03', '7', '8', '9',
	'\x03', '7', '9', '0', '\x03', '7', '9', '1', '\x03', '7', '9', '2', '\x03', '7', '9', '3', '\x03', '7', '9', '4',
	'\x03', '7', '9', '5', '\x03', '7', '9', '6', '\x03', '7', '9', '7', '\x03', '7', '9', '8', '\x03', '7', '9', '9',
	'\x03', '8', '0', '0', '\x03', '8', '0', '1', '\x03', '8', '0', '2', '\x03', '8', '0', '3', '\x03', '8', '0', '4',
	'\x03', '8', '0', '5', '\x03', '8', '0', '6', '\x03', '8', '0', '7', '\x03', '8', '0', '8', '\x03', '8', '0', '9',
	'\x03', '8', '1', '0', '\x03', '8', '1', '1', '\x03', '8', '1', '2', '\x03', '8', '1', '3', '\x03', '8', '1', '4',
	'\x03', '8', '1', '5', '\x03', '8', '1', '6', '\x03', '8', '1', '7', '\x03', '8', '1', '8', '\x03', '8', '1', '9',
	'\x03', '8', '2', '0', '\x03', '8', '2', '1', '\x03', '8', '2', '2', '\x03', '8', '2', '3', '\x03', '8', '2', '4',
	'\x03', '8', '2', '5', '\x03', '8', '2', '6', '\x03', '8', '2', '7', '\x03', '8', '2', '8', '\x03', '8', '2', '9',
	'\x03', '8', '3', '0', '\x03', '8', '3', '1', '\x03', '8', '3', '2', '\x03', '8', '3', '3', '\x03', '8', '3', '4',
	'\x03', '8', '3', '5', '\x03', '8', '3', '6', '\x03', '8', '3', '7', '\x03', '8', '3', '8', '\x03', '8', '3', '9',
	'\x03', '8', '4', '0', '\x03', '8', '4', '1', '\x03', '8', '4', '2', '\x03', '8', '4', '3', '\x03', '8', '4', '4',
	'\x03', '8', '4', '5', '\x03', '8', '4', '6', '\x03', '8', '4', '7', '\x03', '8', '4', '8', '\x03', '8', '4', '9',
	'\x03', '8', '5', '0', '\x03', '8', '5', '1', '\x03', '8', '5', '2', '\x03', '8', '5', '3', '\x03', '8', '5', '4',
	'\x03', '8', '5', '5', '\x03', '8', '5', '6', '\x03', '8', '5', '7', '\x03', '8', '5', '8', '\x03', '8', '5', '9',
	'\x03', '8', '6', '0', '\x03', '8', '6', '1', '\x03', '8', '6', '2', '\x03', '8', '6', '3', '\x03', '8', '6', '4',
	'\x03', '8', '6', '5', '\x03', '8', '6', '6', '\x03', '8', '6', '7', '\x03', '8', '6', '8', '\x03', '8', '6', '9',
	'\x03', '8', '7', '0', '\x03', '8', '7', '1', '\x03', '8', '7', '2', '\x03', '8', '7', '3', '\x03', '8', '7', '4',
	'\x03', '8', '7', '5', '\x03', '8', '7', '6', '\x03', '8', '7', '7', '\x03', '8', '7', '8', '\x03', '8', '7', '9',
	'\x03', '8', '8', '0', '\x03', '8', '8', '1', '\x03', '8', '8', '2', '\x03', '8', '8', '3', '\x03', '8', '8', '4',
	'\x03', '8', '8', '5', '\x03', '8', '8', '6', '\x03', '8', '8', '7', '\x03', '8', '8', '8', '\x03', '8', '8', '9',
	'\x03', '8', '9', '0', '\x03', '8', '9', '1', '\x03', '8', '9', '2', '\x03', '8', '9', '3', '\x03', '8', '9', '4',
	'\x03', '8', '9', '5', '\x03', '8', '9', '6', '\x03', '8', '9', '7', '\x03', '8', '9', '8', '\x03', '8', '9', '9',
	'\x03', '9', '0', '0', '\x03', '9', '0', '1', '\x03', '9', '0', '2', '\x03', '9', '0', '3', '\x03', '9', '0', '4',
	'\x03', '9', '0', '5', '\x03', '9', '0', '6', '\x03', '9', '0', '7', '\x03', '9', '0', '8', '\x03', '9', '0', '9',
	'\x03', '9', '1', '0', '\x03', '9', '1', '1', '\x03', '9', '1', '2', '\x03', '9', '1', '3', '\x03', '9', '1', '4',
	'\x03', '9', '1', '5', '\x03', '9', '1', '6', '\x03', '9', '1', '7', '\x03', '9', '1', '8', '\x03', '9', '1', '9',
	'\x03', '9', '2', '0', '\x03', '9', '2', '1', '\x03', '9', '2', '2', '\x03', '9', '2', '3', '\x03', '9', '2', '4',
	'\x03', '9', '2', '5', '\x03', '9', '2', '6', '\x03', '9', '2', '7', '\x03', '9', '2', '8', '\x03', '9', '2', '9',
	'\x03', '9', '3', '0', '\x03', '9', '3', '1', '\x03', '9', '3', '2', '\x03', '9', '3', '3', '\x03', '9', '3', '4',
	'\x03', '9', '3', '5', '\x03', '9', '3', '6', '\x03', '9', '3', '7', '\x03', '9', '3', '8', '\x03', '9', '3', '9',
	'\x03', '9', '4', '0', '\x03', '9', '4', '1', '\x03', '9', '4', '2', '\x03', '9', '4', '3', '\x03', '9', '4', '4',
	'\x03', '9', '4', '5', '\x03', '9', '4', '6', '\x03', '9', '4', '7', '\x03', '9', '4', '8', '\x03', '9', '4', '9',
	'\x03', '9', '5', '0', '\x03', '9', '5', '1', '\x03', '9', '5', '2', '\x03', '9', '5', '3', '\x03', '9', '5', '4',
	'\x03', '9', '5', '5', '\x03', '9', '5', '6', '\x03', '9', '5', '7', '\x03', '9', '5', '8', '\x03', '9', '5', '9',
	'\x03', '9', '6', '0', '\x03', '9', '6', '1', '\x03', '9', '6', '2', '\x03', '9', '6', '3', '\x03', '9', '6', '4',
	'\x03', '9', '6', '5', '\x03', '9', '6', '6', '\x03', '9', '6', '7', '\x03', '9', '6', '8', '\x03', '9', '6', '9',
	'\x03', '9', '7', '0', '\x03', '9', '7', '1', '\x03', '9', '7', '2', '\x03', '9', '7', '3', '\x03', '9', '7', '4',
	'\x03', '9', '7', '5', '\x03', '9', '7', '6', '\x03', '9', '7', '7', '\x03', '9', '7', '8', '\x03', '9', '7', '9',
	'\x03', '9', '8', '0', '\x03', '9', '8', '1', '\x03', '9', '8', '2', '\x03', '9', '8', '3', '\x03', '9', '8', '4',
	'\x03', '9', '8', '5', '\x03', '9', '8', '6', '\x03', '9', '8', '7', '\x03', '9', '8', '8', '\x03', '9', '8', '9',
	'\x03', '9', '9', '0', '\x03', '9', '9', '1', '\x03', '9', '9', '2', '\x03', '9', '9', '3', '\x03', '9', '9', '4',
	'\x03', '9', '9', '5', '\x03', '9', '9', '6', '\x03', '9', '9', '7', '\x03', '9', '9', '8', '\x03', '9', '9', '9', '\x00'}

// convert 3-digit part to string.
func d3str(value int, buf []byte, eliminateHeadingZeros bool) ([]byte, bool) {
	if !eliminateHeadingZeros {
		buf = append(buf, BIN2CHAR[value*4+1:value*4+4]...)
		return buf, false
	} else if cl := BIN2CHAR[value*4]; cl > 0 { // lookup char length, might be 0-3
		startIdx := value*4 + 4 - int(cl)
		buf = append(buf, BIN2CHAR[startIdx:startIdx+int(cl)]...)
		return buf, false
	} // skip if eliminating heading zeros and cl == 0
	return buf, true
}

func maxInt8(a, b int8) int8 {
	if a > b {
		return a
	}
	return b
}

func maxInt(a, b int) int {
	if a > b {
		return a
	}
	return b
}

func minInt(a, b int) int {
	if a < b {
		return a
	}
	return b
}

func minInt8(a, b int8) int8 {
	if a < b {
		return a
	}
	return b
}

func unitLeadingZeroes(val int32) int {
	if val >= 100_000_000 {
		return 0
	}
	if val >= 10_000_000 {
		return 1
	}
	if val >= 1_000_000 {
		return 2
	}
	if val >= 100_000 {
		return 3
	}
	if val >= 10_000 {
		return 4
	}
	if val >= 1_000 {
		return 5
	}
	if val >= 100 {
		return 6
	}
	if val >= 10 {
		return 7
	}
	if val >= 1 {
		return 8
	}
	return 9
}

func unitsNonZero(lsu []int32) bool {
	for _, v := range lsu {
		if v != 0 {
			return true
		}
	}
	return false
}

func unitGreaterEqualHalf(val int32) bool {
	return val >= HalfUnit
}

func unitsGreaterEqual(lhs []int32, rhs []int32) bool {
	i := len(lhs) - 1
	j := len(rhs) - 1
	if lhs[i] > rhs[j] {
		return true
	}
	if lhs[i] < rhs[j] {
		return false
	}
	i--
	j--
	if i < 0 {
		for ; j >= 0; j-- {
			if rhs[j] > 0 {
				return false
			}
		}
		return true
	}
	if j < 0 {
		for ; i >= 0; i-- {
			if lhs[i] > 0 {
				return true
			}
		}
	}
	return true
}
